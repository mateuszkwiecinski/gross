plugins {
    alias(libs.plugins.starter.application.android)
    alias(libs.plugins.app.cash.licensee)
    id("io.github.usefulness.licensee-for-android")
}

licensee {
    allow("Apache-2.0")
}

licenseeForAndroid {
    enableKotlinCodeGeneration = true
    enableAndroidAssetGeneration = true
}
android {
    namespace "io.githhub.usefulness.licensee.android.app"

    defaultConfig {
        applicationId = "io.githhub.usefulness.licensee.android.app"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        named("release") {
            minifyEnabled = true
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
            matchingFallbacks += ["debug"]
        }
    }
    lint {
        checkReleaseBuilds = false
    }

    buildFeatures {
        compose = true
        buildConfig = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.androidx.compose.compiler.get()
    }
    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
}
tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

dependencies {
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.core.ktx)
    implementation(libs.lifecycle.runtime.ktx)
    implementation(libs.activity.compose)
    implementation(libs.ui)
    implementation(libs.ui.graphics)
    implementation(libs.material3)


    implementation(project(":ui"))

    //noinspection UseTomlInstead, see `PluginIntegrationTest`
    debugImplementation("androidx.viewpager2:viewpager2:1.0.0")
    debugImplementation(libs.ui.tooling.preview)

    testRuntimeOnly(libs.junit.jupiter.launcher)
    testRuntimeOnly(libs.junit.jupiter.engine)

    testImplementation(libs.junit.jupiter.api)
    testImplementation(libs.assertj.core)
}
